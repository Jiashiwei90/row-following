#usda 1.0
(
    customLayerData = {
        dictionary cameraSettings = {
            dictionary Front = {
                double3 position = (5, 0, 0)
                double radius = 5
            }
            dictionary Perspective = {
                double3 position = (8.789684295654297, 8.693085670471191, 21.088970184326172)
                double3 target = (8.6946955639858, 3.359289967865929, -2.7671517232795857)
            }
            dictionary Right = {
                double3 position = (0, -5, 0)
                double radius = 5
            }
            dictionary Top = {
                double3 position = (0, 0, 5)
                double radius = 5
                double3 target = (-1.1102230775014838e-15, -6.123233810399562e-16, 0)
            }
            string boundCamera = "/World/Camera"
        }
        dictionary metricsAssembler = {
            dictionary "/World/Props/Goldflame_Spirea" = {
            }
            int version = 1
        }
        dictionary navmeshSettings = {
            double agentHeight = 180
            double agentRadius = 20
            bool excludeRigidBodies = 1
            int ver = 1
            double voxelCeiling = 460
        }
        dictionary omni_layer = {
            string authoring_layer = "./sim_new.usda"
            dictionary locked = {
            }
            dictionary muteness = {
            }
        }
        dictionary renderSettings = {
            float3 "rtx:debugView:pixelDebug:textColor" = (0, 1e18, 0)
            bool "rtx:directLighting:sampledLighting:enabled" = 1
            bool "rtx:ecoMode:enabled" = 1
            int "rtx:ecoMode:maxFramesWithoutChange" = 30
            float3 "rtx:fog:fogColor" = (0.75, 0.75, 0.75)
            float3 "rtx:index:regionOfInterestMax" = (0, 0, 0)
            float3 "rtx:index:regionOfInterestMin" = (0, 0, 0)
            float3 "rtx:iray:environment_dome_ground_position" = (0, 0, 0)
            float3 "rtx:iray:environment_dome_ground_reflectivity" = (0, 0, 0)
            float3 "rtx:iray:environment_dome_rotation_axis" = (3.4028235e38, 3.4028235e38, 3.4028235e38)
            bool "rtx:matteObject:enabled" = 0
            bool "rtx:newDenoiser:enabled" = 0
            float3 "rtx:post:backgroundZeroAlpha:backgroundDefaultColor" = (0, 0, 0)
            float3 "rtx:post:colorcorr:contrast" = (1, 1, 1)
            float3 "rtx:post:colorcorr:gain" = (1, 1, 1)
            float3 "rtx:post:colorcorr:gamma" = (1, 1, 1)
            float3 "rtx:post:colorcorr:offset" = (0, 0, 0)
            float3 "rtx:post:colorcorr:saturation" = (1, 1, 1)
            float3 "rtx:post:colorgrad:blackpoint" = (0, 0, 0)
            float3 "rtx:post:colorgrad:contrast" = (1, 1, 1)
            float3 "rtx:post:colorgrad:gain" = (1, 1, 1)
            float3 "rtx:post:colorgrad:gamma" = (1, 1, 1)
            float3 "rtx:post:colorgrad:lift" = (0, 0, 0)
            float3 "rtx:post:colorgrad:multiply" = (1, 1, 1)
            float3 "rtx:post:colorgrad:offset" = (0, 0, 0)
            float3 "rtx:post:colorgrad:whitepoint" = (1, 1, 1)
            int "rtx:post:dlss:execMode" = 0
            float3 "rtx:post:lensDistortion:lensFocalLengthArray" = (10, 30, 50)
            float3 "rtx:post:lensFlares:anisoFlareFalloffX" = (450, 475, 500)
            float3 "rtx:post:lensFlares:anisoFlareFalloffY" = (10, 10, 10)
            float3 "rtx:post:lensFlares:cutoffPoint" = (2, 2, 2)
            float3 "rtx:post:lensFlares:haloFlareFalloff" = (10, 10, 10)
            float3 "rtx:post:lensFlares:haloFlareRadius" = (75, 75, 75)
            float3 "rtx:post:lensFlares:isotropicFlareFalloff" = (50, 50, 50)
            float3 "rtx:post:tonemap:whitepoint" = (1, 1, 1)
            float3 "rtx:raytracing:inscattering:singleScatteringAlbedo" = (0.9, 0.9, 0.9)
            float3 "rtx:raytracing:inscattering:transmittanceColor" = (0.5, 0.5, 0.5)
            float3 "rtx:sceneDb:ambientLightColor" = (0.1, 0.1, 0.1)
            double "rtx:translucency:worldEps" = 0.005
        }
    }
    defaultPrim = "World"
    endTimeCode = 100
    metersPerUnit = 1
    startTimeCode = 0
    timeCodesPerSecond = 60
    upAxis = "Z"
)

over "Render" (
    hide_in_stage_window = true
)
{
}

def Xform "World"
{
    def Xform "GroundPlane" (
        prepend apiSchemas = ["MaterialBindingAPI", "SemanticsAPI:Semantics_ngjC"]
    )
    {
        rel material:binding = </World/Looks/Grog_Fired_Clay_Dirt> (
            bindMaterialAs = "weakerThanDescendants"
        )
        string semantic:Semantics_ngjC:params:semanticData = "Ground"
        string semantic:Semantics_ngjC:params:semanticType = "class"
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Mesh "CollisionMesh"
        {
            uniform bool doubleSided = 0
            int[] faceVertexCounts = [4]
            int[] faceVertexIndices = [0, 1, 2, 3]
            normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1)]
            point3f[] points = [(-25, -25, 0), (25, -25, 0), (25, 25, 0), (-25, 25, 0)]
            color3f[] primvars:displayColor = [(0.5, 0.5, 0.5)]
            texCoord2f[] primvars:st = [(0, 0), (1, 0), (1, 1), (0, 1)] (
                interpolation = "varying"
            )
        }

        def Plane "CollisionPlane" (
            prepend apiSchemas = ["PhysicsCollisionAPI"]
        )
        {
            uniform token axis = "Z"
            uniform token purpose = "guide"
        }
    }

    def DomeLight "DomeLight" (
        prepend apiSchemas = ["ShapingAPI"]
    )
    {
        float inputs:intensity = 1000
        float inputs:shaping:cone:angle = 180
        float inputs:shaping:cone:softness
        float inputs:shaping:focus
        color3f inputs:shaping:focusTint
        asset inputs:shaping:ies:file
        token inputs:texture:format = "latlong"
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Scope "Looks"
    {
        def Material "Grog_Fired_Clay_Dirt"
        {
            token outputs:mdl:displacement.connect = </World/Looks/Grog_Fired_Clay_Dirt/Shader.outputs:out>
            token outputs:mdl:surface.connect = </World/Looks/Grog_Fired_Clay_Dirt/Shader.outputs:out>
            token outputs:mdl:volume.connect = </World/Looks/Grog_Fired_Clay_Dirt/Shader.outputs:out>

            def Shader "Shader"
            {
                uniform token info:implementationSource = "sourceAsset"
                uniform asset info:mdl:sourceAsset = @http://omniverse-content-production.s3.us-west-2.amazonaws.com/Materials/vMaterials_2/Ceramic/Grog_Fired_Clay.mdl@
                uniform token info:mdl:sourceAsset:subIdentifier = "Grog_Fired_Clay_Dirt"
                token outputs:out (
                    renderType = "material"
                )
            }
        }
    }

    def OmniGraph "ActionGraph"
    {
        token evaluationMode = "Automatic"
        token evaluator:type = "execution"
        token fabricCacheBacking = "Shared"
        int2 fileFormatVersion = (1, 7)
        token pipelineStage = "pipelineStageSimulation"

        def OmniGraphNode "on_tick" (
            prepend apiSchemas = ["NodeGraphNodeAPI"]
        )
        {
            custom uint inputs:framePeriod
            custom bool inputs:onlyPlayback
            token node:type = "omni.graph.action.OnTick"
            int node:typeVersion = 1
            custom double outputs:absoluteSimTime
            custom double outputs:deltaSeconds
            custom double outputs:frame
            custom bool outputs:isPlaying
            custom uint outputs:tick (
                customData = {
                    bool isExecution = 1
                }
            )
            custom double outputs:time
            custom double outputs:timeSinceStart
            custom double state:accumulatedSeconds
            custom uint state:frameCount
            uniform token ui:nodegraph:node:expansionState = "open"
            uniform float2 ui:nodegraph:node:pos = (-162.21521, 604.7537)
        }

        def OmniGraphNode "isaac_create_render_product" (
            prepend apiSchemas = ["NodeGraphNodeAPI"]
        )
        {
            custom rel inputs:cameraPrim = </World/Camera> (
                customData = {
                    dictionary omni = {
                        dictionary graph = {
                            string relType = "target"
                        }
                    }
                }
            )
            custom bool inputs:enabled
            custom uint inputs:execIn
            prepend uint inputs:execIn.connect = </World/ActionGraph/on_tick.outputs:tick>
            custom uint inputs:height
            custom uint inputs:width
            token node:type = "omni.isaac.core_nodes.IsaacCreateRenderProduct"
            int node:typeVersion = 2
            custom uint outputs:execOut (
                customData = {
                    bool isExecution = 1
                }
            )
            custom token outputs:renderProductPath
            uniform token ui:nodegraph:node:expansionState = "open"
            uniform float2 ui:nodegraph:node:pos = (375.24066, 343.95853)
        }

        def OmniGraphNode "ros2_camera_helper" (
            prepend apiSchemas = ["NodeGraphNodeAPI"]
        )
        {
            custom uint64 inputs:context
            custom bool inputs:enabled
            custom bool inputs:enableSemanticLabels
            custom uint inputs:execIn
            prepend uint inputs:execIn.connect = </World/ActionGraph/isaac_create_render_product.outputs:execOut>
            custom string inputs:frameId
            custom string inputs:nodeNamespace
            custom uint64 inputs:queueSize
            custom token inputs:renderProductPath
            prepend token inputs:renderProductPath.connect = </World/ActionGraph/isaac_create_render_product.outputs:renderProductPath>
            custom bool inputs:resetSimulationTimeOnStop
            custom string inputs:semanticLabelsTopicName
            custom float2 inputs:stereoOffset
            custom string inputs:topicName
            custom token inputs:type (
                allowedTokens = ["rgb", "depth", "depth_pcl", "instance_segmentation", "semantic_segmentation", "bbox_2d_tight", "bbox_2d_loose", "bbox_3d", "camera_info"]
            )
            custom token inputs:viewport
            token node:type = "omni.isaac.ros2_bridge.ROS2CameraHelper"
            int node:typeVersion = 2
            uniform token ui:nodegraph:node:expansionState = "open"
            uniform float2 ui:nodegraph:node:pos = (688.96857, 280.8498)
        }

        def OmniGraphNode "ros2_camera_helper_01" (
            prepend apiSchemas = ["NodeGraphNodeAPI"]
        )
        {
            custom uint64 inputs:context
            custom bool inputs:enabled
            custom bool inputs:enableSemanticLabels
            custom uint inputs:execIn
            prepend uint inputs:execIn.connect = </World/ActionGraph/isaac_create_render_product.outputs:execOut>
            custom string inputs:frameId
            custom string inputs:nodeNamespace
            custom uint64 inputs:queueSize
            custom token inputs:renderProductPath
            prepend token inputs:renderProductPath.connect = </World/ActionGraph/isaac_create_render_product.outputs:renderProductPath>
            custom bool inputs:resetSimulationTimeOnStop
            custom string inputs:semanticLabelsTopicName
            custom float2 inputs:stereoOffset
            custom string inputs:topicName = "semantic_segmentation"
            custom token inputs:type = "semantic_segmentation" (
                allowedTokens = ["rgb", "depth", "depth_pcl", "instance_segmentation", "semantic_segmentation", "bbox_2d_tight", "bbox_2d_loose", "bbox_3d", "camera_info"]
            )
            custom token inputs:viewport
            token node:type = "omni.isaac.ros2_bridge.ROS2CameraHelper"
            int node:typeVersion = 2
            uniform token ui:nodegraph:node:expansionState = "open"
            uniform float2 ui:nodegraph:node:pos = (708.96857, 682.8498)
        }

        def OmniGraphNode "ros2_subscribe_twist" (
            prepend apiSchemas = ["NodeGraphNodeAPI"]
        )
        {
            custom uint64 inputs:context
            custom uint inputs:execIn
            prepend uint inputs:execIn.connect = </World/ActionGraph/on_tick.outputs:tick>
            custom string inputs:nodeNamespace
            custom uint64 inputs:queueSize
            custom string inputs:topicName = "cmd_vel"
            token node:type = "omni.isaac.ros2_bridge.ROS2SubscribeTwist"
            int node:typeVersion = 1
            custom vector3d outputs:angularVelocity
            custom uint outputs:execOut (
                customData = {
                    bool isExecution = 1
                }
            )
            custom vector3d outputs:linearVelocity
            uniform token ui:nodegraph:node:expansionState = "open"
            uniform float2 ui:nodegraph:node:pos = (163.50262, 675.7219)
        }

        def OmniGraphNode "script_node" (
            prepend apiSchemas = ["NodeGraphNodeAPI"]
        )
        {
            custom uint inputs:execIn
            prepend uint inputs:execIn.connect = </World/ActionGraph/ros2_subscribe_twist.outputs:execOut>
            custom string inputs:script = """# This script is executed the first time the script node computes, or the next time
# it computes after this script is modified or the 'Reset' button is pressed.
#
# The following callback functions may be defined in this script:
#     setup(db): Called immediately after this script is executed
#     compute(db): Called every time the node computes (should always be defined)
#     cleanup(db): Called when the node is deleted or the reset button is pressed
# Available variables:
#    db: og.Database The node interface, attributes are exposed like db.inputs.foo
#                    Use db.log_error, db.log_warning to report problems.
#    og: The omni.graph.core module


def setup(db: og.Database):
    pass


def cleanup(db: og.Database):
    pass


def compute(db: og.Database):
    return True"""
            custom token inputs:scriptPath = "../src/isaac_randomize_cam_pos.py"
            custom bool inputs:usePath = 1
            token node:type = "omni.graph.scriptnode.ScriptNode"
            int node:typeVersion = 2
            custom uint outputs:execOut (
                customData = {
                    bool isExecution = 1
                }
            )
            custom bool state:omni_initialized
            uniform token ui:nodegraph:node:expansionState = "open"
            uniform float2 ui:nodegraph:node:pos = (443.537, 697.0367)
        }
    }

    def Camera "Camera" (
        hide_in_stage_window = false
        no_delete = false
    )
    {
        custom token cameraProjectionType (
            allowedTokens = ["pinhole", "fisheyeOrthographic", "fisheyeEquidistant", "fisheyeEquisolid", "fisheyePolynomial", "fisheyeSpherical", "fisheyeKannalaBrandtK3", "fisheyeRadTanThinPrism", "omniDirectionalStereo"]
        )
        float4[] clippingPlanes = []
        float2 clippingRange = (0.01, 10000000)
        float exposure = 0
        float focalLength = 18.147562
        float focusDistance = 400
        float fStop = 0
        custom float fthetaCx
        custom float fthetaCy
        custom float fthetaHeight
        custom float fthetaMaxFov
        custom float fthetaPolyA
        custom float fthetaPolyB
        custom float fthetaPolyC
        custom float fthetaPolyD
        custom float fthetaPolyE
        custom float fthetaWidth
        float horizontalAperture = 20.955
        float horizontalApertureOffset = 0
        custom vector3d omni:kit:centerOfInterest = (-3.783080398728785e-16, -2.821096400786833e-15, -42.99889600620506)
        token projection = "perspective"
        uniform token purpose = "default"
        double shutter:close = 0
        double shutter:open = 0
        uniform token stereoRole = "mono"
        float verticalAperture = 15.2908
        float verticalApertureOffset = 0
        token visibility = "inherited"
        quatd xformOp:orient = (0.7690003058852922, 0.636355161151569, 0.057849923992355445, -0.018547903336123682)
        float3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.6631603990527417, 1.0643618945404345, 0.40956401630462497)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "Props"
    {
    }

    def Xform "persun_0_0" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_0_1" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.10000000149011612, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_0_2" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.20000000298023224, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_0_3" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.30000001192092896, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_0_4" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.4000000059604645, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_0_5" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.5, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_0_6" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.6000000238418579, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_0_7" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.699999988079071, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_0_8" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.800000011920929, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_0_9" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.8999999761581421, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_0_10" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_0_11" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.100000023841858, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_0_12" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.2000000476837158, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_0_13" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.2999999523162842, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_0_14" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.399999976158142, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_0_15" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.5, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_0_16" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.600000023841858, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_0_17" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.7000000476837158, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_0_18" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.7999999523162842, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_0_19" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.899999976158142, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_1_0" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0, 0.4000000059604645, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_1_1" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.10000000149011612, 0.4000000059604645, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_1_2" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.20000000298023224, 0.4000000059604645, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_1_3" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.30000001192092896, 0.4000000059604645, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_1_4" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.4000000059604645, 0.4000000059604645, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_1_5" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.5, 0.4000000059604645, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_1_6" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.6000000238418579, 0.4000000059604645, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_1_7" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.699999988079071, 0.4000000059604645, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_1_8" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.800000011920929, 0.4000000059604645, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_1_9" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.8999999761581421, 0.4000000059604645, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_1_10" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1, 0.4000000059604645, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_1_11" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.100000023841858, 0.4000000059604645, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_1_12" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.2000000476837158, 0.4000000059604645, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_1_13" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.2999999523162842, 0.4000000059604645, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_1_14" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.399999976158142, 0.4000000059604645, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_1_15" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.5, 0.4000000059604645, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_1_16" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.600000023841858, 0.4000000059604645, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_1_17" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.7000000476837158, 0.4000000059604645, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_1_18" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.7999999523162842, 0.4000000059604645, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_1_19" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.899999976158142, 0.4000000059604645, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_2_0" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0, 0.800000011920929, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_2_1" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.10000000149011612, 0.800000011920929, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_2_2" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.20000000298023224, 0.800000011920929, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_2_3" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.30000001192092896, 0.800000011920929, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_2_4" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.4000000059604645, 0.800000011920929, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_2_5" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.5, 0.800000011920929, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_2_6" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.6000000238418579, 0.800000011920929, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_2_7" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.699999988079071, 0.800000011920929, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_2_8" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.800000011920929, 0.800000011920929, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_2_9" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.8999999761581421, 0.800000011920929, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_2_10" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1, 0.800000011920929, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_2_11" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.100000023841858, 0.800000011920929, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_2_12" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.2000000476837158, 0.800000011920929, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_2_13" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.2999999523162842, 0.800000011920929, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_2_14" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.399999976158142, 0.800000011920929, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_2_15" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.5, 0.800000011920929, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_2_16" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.600000023841858, 0.800000011920929, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_2_17" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.7000000476837158, 0.800000011920929, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_2_18" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.7999999523162842, 0.800000011920929, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_2_19" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.899999976158142, 0.800000011920929, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_3_0" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0, 1.2000000476837158, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_3_1" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.10000000149011612, 1.2000000476837158, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_3_2" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.20000000298023224, 1.2000000476837158, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_3_3" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.30000001192092896, 1.2000000476837158, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_3_4" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.4000000059604645, 1.2000000476837158, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_3_5" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.5, 1.2000000476837158, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_3_6" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.6000000238418579, 1.2000000476837158, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_3_7" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.699999988079071, 1.2000000476837158, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_3_8" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.800000011920929, 1.2000000476837158, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_3_9" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.8999999761581421, 1.2000000476837158, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_3_10" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1, 1.2000000476837158, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_3_11" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.100000023841858, 1.2000000476837158, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_3_12" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.2000000476837158, 1.2000000476837158, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_3_13" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.2999999523162842, 1.2000000476837158, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_3_14" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.399999976158142, 1.2000000476837158, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_3_15" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.5, 1.2000000476837158, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_3_16" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.600000023841858, 1.2000000476837158, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_3_17" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.7000000476837158, 1.2000000476837158, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_3_18" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.7999999523162842, 1.2000000476837158, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_3_19" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.899999976158142, 1.2000000476837158, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_4_0" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0, 1.600000023841858, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_4_1" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.10000000149011612, 1.600000023841858, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_4_2" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.20000000298023224, 1.600000023841858, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_4_3" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.30000001192092896, 1.600000023841858, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_4_4" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.4000000059604645, 1.600000023841858, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_4_5" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.5, 1.600000023841858, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_4_6" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.6000000238418579, 1.600000023841858, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_4_7" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.699999988079071, 1.600000023841858, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_4_8" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.800000011920929, 1.600000023841858, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_4_9" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0.8999999761581421, 1.600000023841858, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_4_10" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1, 1.600000023841858, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_4_11" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.100000023841858, 1.600000023841858, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_4_12" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.2000000476837158, 1.600000023841858, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_4_13" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.2999999523162842, 1.600000023841858, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_4_14" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.399999976158142, 1.600000023841858, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_4_15" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.5, 1.600000023841858, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_4_16" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.600000023841858, 1.600000023841858, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_4_17" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.7000000476837158, 1.600000023841858, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_4_18" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.7999999523162842, 1.600000023841858, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def Xform "persun_4_19" (
        prepend references = @/home/milos/row-following/Simulation/persun_scaled.usda@
    )
    {
        quatd xformOp:orient = (1, 0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (1.899999976158142, 1.600000023841858, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }
}

def Xform "Environment"
{
    quatd xformOp:orient = (1, 0, 0, 0)
    double3 xformOp:scale = (1, 1, 1)
    double3 xformOp:translate = (0, 0, 0)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

    def DistantLight "defaultLight" (
        prepend apiSchemas = ["ShapingAPI"]
    )
    {
        float inputs:angle = 1
        float inputs:intensity = 3000
        float inputs:shaping:cone:angle = 180
        float inputs:shaping:cone:softness
        float inputs:shaping:focus
        color3f inputs:shaping:focusTint
        asset inputs:shaping:ies:file
        quatd xformOp:orient = (0.6532814824381883, 0.2705980500730985, 0.27059805007309845, 0.6532814824381882)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }
}

over "OmniverseKit_Persp"
{
    custom token cameraProjectionType (
        allowedTokens = ["pinhole", "fisheyeOrthographic", "fisheyeEquidistant", "fisheyeEquisolid", "fisheyePolynomial", "fisheyeSpherical", "fisheyeKannalaBrandtK3", "fisheyeRadTanThinPrism", "omniDirectionalStereo"]
    )
    custom float fthetaCx
    custom float fthetaCy
    custom float fthetaHeight
    custom float fthetaMaxFov
    custom float fthetaPolyA
    custom float fthetaPolyB
    custom float fthetaPolyC
    custom float fthetaPolyD
    custom float fthetaPolyE
    custom float fthetaWidth
    custom uniform vector3d omni:kit:centerOfInterest = (0, 0, -24.44530531465749)
    quatd xformOp:orient = (0.00884955283254385, 0.0009773870697245002, 0.1097729429602623, 0.9939168095588684)
    double3 xformOp:translate = (8.789684295654297, 8.693085670471191, 21.088970184326172)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
}

over "OmniverseKit_Front"
{
    custom token cameraProjectionType (
        allowedTokens = ["pinhole", "fisheyeOrthographic", "fisheyeEquidistant", "fisheyeEquisolid", "fisheyePolynomial", "fisheyeSpherical", "fisheyeKannalaBrandtK3", "fisheyeRadTanThinPrism", "omniDirectionalStereo"]
    )
    custom float fthetaCx
    custom float fthetaCy
    custom float fthetaHeight
    custom float fthetaMaxFov
    custom float fthetaPolyA
    custom float fthetaPolyB
    custom float fthetaPolyC
    custom float fthetaPolyD
    custom float fthetaPolyE
    custom float fthetaWidth
    quatd xformOp:orient = (0.5, 0.5, 0.5, 0.5)
    double3 xformOp:translate = (5, 0, 0)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
}

over "OmniverseKit_Top"
{
    custom token cameraProjectionType (
        allowedTokens = ["pinhole", "fisheyeOrthographic", "fisheyeEquidistant", "fisheyeEquisolid", "fisheyePolynomial", "fisheyeSpherical", "fisheyeKannalaBrandtK3", "fisheyeRadTanThinPrism", "omniDirectionalStereo"]
    )
    custom float fthetaCx
    custom float fthetaCy
    custom float fthetaHeight
    custom float fthetaMaxFov
    custom float fthetaPolyA
    custom float fthetaPolyB
    custom float fthetaPolyC
    custom float fthetaPolyD
    custom float fthetaPolyE
    custom float fthetaWidth
    custom uniform vector3d omni:kit:centerOfInterest = (0, 0, -5)
    quatd xformOp:orient = (-0.7071067690849304, 1.2180242460777213e-16, -3.520682188222904e-17, 0.7071067690849304)
    double3 xformOp:translate = (0, 0, 5)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
}

over "OmniverseKit_Right"
{
    custom token cameraProjectionType (
        allowedTokens = ["pinhole", "fisheyeOrthographic", "fisheyeEquidistant", "fisheyeEquisolid", "fisheyePolynomial", "fisheyeSpherical", "fisheyeKannalaBrandtK3", "fisheyeRadTanThinPrism", "omniDirectionalStereo"]
    )
    custom float fthetaCx
    custom float fthetaCy
    custom float fthetaHeight
    custom float fthetaMaxFov
    custom float fthetaPolyA
    custom float fthetaPolyB
    custom float fthetaPolyC
    custom float fthetaPolyD
    custom float fthetaPolyE
    custom float fthetaWidth
    quatd xformOp:orient = (0.7071067690849304, 0.7071067690849304, 7.850462159063936e-17, 7.850462159063936e-17)
    double3 xformOp:translate = (0, -5, 0)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
}

